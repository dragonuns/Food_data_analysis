{"remainingRequest":"F:\\Graduation_project\\38\\Program\\front_end\\node_modules\\babel-loader\\lib\\index.js!F:\\Graduation_project\\38\\Program\\front_end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\Graduation_project\\38\\Program\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Graduation_project\\38\\Program\\front_end\\src\\views\\search_food_result.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\Graduation_project\\38\\Program\\front_end\\src\\views\\search_food_result.vue","mtime":1663050389893},{"path":"F:\\Graduation_project\\38\\Program\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Graduation_project\\38\\Program\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\Graduation_project\\38\\Program\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Graduation_project\\38\\Program\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["search_food_result.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <div class=\"s2-3\" style=\"font-size: 20px;text-align: left;color: #ffffff;\">\r\n      数据说明：\r\n      <br />1. 本网站食物营养成分含量为每 100 克食物所含的含量；\r\n      <br />2. 食物营养成分数据来源于美国农业部数据库及中国农业农村部数据库；\r\n      <br />3. 若没有您需要的食物营养数据或本网站数据有误，请发邮件至 wuyutai@aliyun.com 联系。\r\n    </div>\r\n    <div class=\"s2-1\" style=\"font-size: 35px;text-align: center;color: #ffffff;\">三种主要营养成分</div>\r\n    <div class=\"s2-2\">\r\n      <div class=\"style\">\r\n        <div id=\"myChart0\" style=\"width: 1100px;height:450px;\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"s2-1\" style=\"font-size: 35px;text-align: center;color: #ffffff;\">基本营养</div>\r\n    <div class=\"s2-2\">\r\n      <div class=\"style\">\r\n        <div id=\"myChart1\" style=\"width: 1100px;height:450px;\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"s2-1\" style=\"font-size: 35px;text-align: center;color: #ffffff;\">脂类</div>\r\n    <div class=\"s2-2\">\r\n      <div class=\"style\">\r\n        <div id=\"myChart2\" style=\"width: 1100px;height:450px;\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"s2-1\" style=\"font-size: 35px;text-align: center;color: #ffffff;\">矿物质</div>\r\n    <div class=\"s2-2\">\r\n      <div class=\"style\">\r\n        <div id=\"myChart3\" style=\"width: 1100px;height:450px;\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"s2-1\" style=\"font-size: 35px;text-align: center;color: #ffffff;\">维生素</div>\r\n    <div class=\"s2-2\">\r\n      <div class=\"style\">\r\n        <div id=\"myChart4\" style=\"width: 1100px;height:450px;\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"s2-1\" style=\"font-size: 35px;text-align: center;color: #ffffff;\">氨基酸</div>\r\n    <div class=\"s2-2\">\r\n      <div class=\"style\">\r\n        <div id=\"myChart5\" style=\"width: 1100px;height:450px;\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"s2-1\" style=\"font-size: 35px;text-align: center;color: #ffffff;\">各种营养成分含量分布</div>\r\n    <div class=\"s2-2\">\r\n      <div class=\"style\">\r\n        <div id=\"myChart6\" style=\"width: 1100px;height:450px;\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"s2-1\" style=\"font-size: 35px;text-align: center;color: #ffffff;\">各类营养成分含量分布</div>\r\n    <div class=\"s2-2\">\r\n      <div class=\"style\">\r\n        <div id=\"myChart7\" style=\"width: 1100px;height:450px;\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"s2-1\" style=\"font-size: 35px;text-align: center;color: #ffffff;\">营养成分列表</div>\r\n    <div class=\"s2-2\">\r\n      <div class=\"style\">\r\n        <div\r\n          class=\"style-title\"\r\n          style=\"background-color: #999999;color: #ffffff;font-size: 18px\"\r\n        >基本营养</div>\r\n        <div>\r\n          <div\r\n            v-for=\"(basic_natrition_name,index) in basic_name\"\r\n            :key=\"basic_natrition_name\"\r\n            class=\"line\"\r\n          >\r\n            <div class=\"left\">{{basic_natrition_name}}</div>\r\n            <div class=\"right\">{{basic_value[index]}}毫克</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"style-title\" style=\"background-color: #FF9901;color: #ffffff;font-size: 18px\">脂类</div>\r\n        <div>\r\n          <div v-for=\"(lipid,index) in lipid_name\" :key=\"lipid\" class=\"line\">\r\n            <div class=\"left\">{{lipid}}</div>\r\n            <div class=\"right\">{{lipid_value[index]}}毫克</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"style-title\"\r\n          style=\"background-color: #333333;color: #ffffff;font-size: 18px\"\r\n        >矿物质</div>\r\n        <div>\r\n          <div v-for=\"(mineral,index) in mineral_name\" :key=\"mineral\" class=\"line\">\r\n            <div class=\"left\">{{mineral}}</div>\r\n            <div class=\"right\">{{mineral_value[index]}}毫克</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"style-title\"\r\n          style=\"background-color: #01CC01;color: #ffffff;font-size: 18px\"\r\n        >维生素</div>\r\n        <div>\r\n          <div v-for=\"(vitamin,index) in vitamin_name\" :key=\"vitamin\" class=\"line\">\r\n            <div class=\"left\">{{vitamin}}</div>\r\n            <div class=\"right\">{{vitamin_value[index]}}毫克</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"style-title\"\r\n          style=\"background-color: #FF3366;color: #ffffff;font-size: 18px\"\r\n        >氨基酸</div>\r\n        <div>\r\n          <div v-for=\"(amino_acid,index) in amino_acid_name\" :key=\"amino_acid\" class=\"line\">\r\n            <div class=\"left\">{{amino_acid}}</div>\r\n            <div class=\"right\">{{amino_acid_value[index]}}毫克</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { serverUrl } from \"../config.ts\";\r\n// 引入 ECharts 主模块\r\nvar echarts = require(\"echarts/lib/echarts\");\r\n// 引入柱状图\r\nrequire(\"echarts/lib/chart/bar\");\r\n// 引入饼图\r\nrequire(\"echarts/lib/chart/pie\");\r\n// 引入提示框和标题组件\r\nrequire(\"echarts/lib/component/tooltip\");\r\nrequire(\"echarts/lib/component/title\");\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      food_id: this.food_id,\r\n      basic_name: [],\r\n      basic_value: [],\r\n\r\n      lipid_name: [],\r\n      lipid_value: [],\r\n\r\n      mineral_name: [],\r\n      mineral_value: [],\r\n\r\n      vitamin_name: [],\r\n      vitamin_value: [],\r\n\r\n      amino_acid_name: [],\r\n      amino_acid_value: []\r\n    };\r\n  },\r\n  /* 实例创建后立即被调用；传递参数 */\r\n  created() {\r\n    this.food_id = this.$route.query.food_id;\r\n  },\r\n  /* 异步执行：await 后的函数返回结果后再执行绘图代码 */\r\n  async mounted() {\r\n    await this.get_food_data(this.$route.query.food_id);\r\n    await this.get_top_data(this.$route.query.food_id);\r\n    await this.get_base_data(this.$route.query.food_id);\r\n    await this.get_scale(this.$route.query.food_id);\r\n    this.drawLine();\r\n  },\r\n  methods: {\r\n    get_top_data(food_id) {\r\n      return new Promise((resolve, reject) => {\r\n        this.axios\r\n          .get(serverUrl + \"/api/food/main_nutrition\", {\r\n            params: { food_id: food_id }\r\n          })\r\n          .then(res => {\r\n            let arr = res.data.data[0];\r\n            var top_name = [];\r\n            var top_value = [];\r\n            for (let i1 in arr[0]) {\r\n              top_name.push(i1);\r\n              top_value.push(arr[0][i1]);\r\n            }\r\n            this.top_name = top_name;\r\n            this.top_value = top_value;\r\n            // 绘制主要营养图表\r\n            let topChart = echarts.init(document.getElementById(\"myChart0\"));\r\n            topChart.setOption({\r\n              title: {\r\n                text: \"主要营养（毫克）\"\r\n              },\r\n              tooltip: {},\r\n              xAxis: {},\r\n              yAxis: {\r\n                data: this.top_name\r\n              },\r\n              series: [\r\n                {\r\n                  name: \"主要营养\",\r\n                  type: \"bar\",\r\n                  data: this.top_value,\r\n                  itemStyle: {\r\n                    normal: {\r\n                      label: {\r\n                        show: true, //开启显示\r\n                        position: \"top\", //在上方显示\r\n                        textStyle: {\r\n                          //数值样式\r\n                          color: \"black\",\r\n                          fontSize: 16\r\n                        }\r\n                      },\r\n                      color: function(params) {\r\n                        var colorList = [\r\n                          \"#99ff33\",\r\n                          \"#2f4554\",\r\n                          \"#61a0a8\",\r\n                          \"#d48265\",\r\n                          \"#91c7ae\",\r\n                          \"#749f83\",\r\n                          \"#ca8622\"\r\n                        ];\r\n                        var index;\r\n                        //若柱体数量大于定义的颜色数量，颜色循环\r\n                        if (params.dataIndex >= colorList.length) {\r\n                          index = params.dataIndex - colorList.length;\r\n                          return colorList[index];\r\n                        }\r\n                        return colorList[params.dataIndex];\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            });\r\n\r\n            resolve();\r\n          })\r\n          .catch(error => reject(error));\r\n      });\r\n    },\r\n    get_base_data(food_id) {\r\n      return new Promise((resolve, reject) => {\r\n        this.axios\r\n          .get(serverUrl + \"/api/food/food_detailed\", {\r\n            params: { food_id: food_id }\r\n          })\r\n          .then(res => {\r\n            let arr = res.data.data[0];\r\n            var basic_nutrition_name = [];\r\n            var basic_nutrition_value = [];\r\n            for (let item of arr) {\r\n              for (let i1 in item[\"style_first\"]) {\r\n                basic_nutrition_name.push(i1);\r\n                basic_nutrition_value.push(item[\"style_first\"][i1]);\r\n              }\r\n            }\r\n            this.basic_name1 = basic_nutrition_name;\r\n            this.basic_value1 = basic_nutrition_value;\r\n            //绘制基本营养图表\r\n            let topChart = echarts.init(document.getElementById(\"myChart1\"));\r\n            topChart.setOption({\r\n              title: {\r\n                text: \"基本营养（毫克）\"\r\n              },\r\n              tooltip: {},\r\n              xAxis: {\r\n                data: this.basic_name1\r\n              },\r\n              yAxis: {},\r\n              series: [\r\n                {\r\n                  name: \"基本营养\",\r\n                  type: \"bar\",\r\n                  data: this.basic_value1,\r\n                  itemStyle: {\r\n                    normal: {\r\n                      label: {\r\n                        show: true, //开启显示\r\n                        position: \"top\", //在上方显示\r\n                        textStyle: {\r\n                          //数值样式\r\n                          color: \"black\",\r\n                          fontSize: 16\r\n                        }\r\n                      },\r\n                      color: function(params) {\r\n                        var colorList = [\r\n                          \"#99ff33\",\r\n                          \"#2f4554\",\r\n                          \"#61a0a8\",\r\n                          \"#d48265\",\r\n                          \"#91c7ae\",\r\n                          \"#749f83\",\r\n                          \"#ca8622\"\r\n                        ];\r\n                        var index;\r\n                        if (params.dataIndex >= colorList.length) {\r\n                          index = params.dataIndex - colorList.length;\r\n                          return colorList[index];\r\n                        }\r\n                        return colorList[params.dataIndex];\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            });\r\n\r\n            resolve();\r\n          })\r\n          .catch(error => reject(error));\r\n      });\r\n    },\r\n    get_food_data(food_id) {\r\n      return new Promise((resolve, reject) => {\r\n        this.axios\r\n          .get(serverUrl + \"/api/food/food_detailed\", {\r\n            params: { food_id: food_id }\r\n          })\r\n          .then(res => {\r\n            let arr = res.data.data[0];\r\n            var basic_nutrition_name = [];\r\n            var basic_nutrition_value = [];\r\n\r\n            var lipid_name = [];\r\n            var lipid_value = [];\r\n\r\n            var mineral_name = [];\r\n            var mineral_value = [];\r\n\r\n            var vitamin_name = [];\r\n            var vitamin_value = [];\r\n\r\n            var amino_acid_name = [];\r\n            var amino_acid_value = [];\r\n            for (let item of arr) {\r\n              for (let i1 in item[\"style_first\"]) {\r\n                basic_nutrition_name.push(i1);\r\n                basic_nutrition_value.push(item[\"style_first\"][i1]);\r\n              }\r\n              for (let i2 in item[\"style_second\"]) {\r\n                lipid_name.push(i2);\r\n                lipid_value.push(item[\"style_second\"][i2]);\r\n              }\r\n              for (let i3 in item[\"style_third\"]) {\r\n                mineral_name.push(i3);\r\n                mineral_value.push(item[\"style_third\"][i3]);\r\n              }\r\n              for (let i4 in item[\"style_fourth\"]) {\r\n                vitamin_name.push(i4);\r\n                vitamin_value.push(item[\"style_fourth\"][i4]);\r\n              }\r\n              for (let i5 in item[\"style_fifth\"]) {\r\n                amino_acid_name.push(i5);\r\n                amino_acid_value.push(item[\"style_fifth\"][i5]);\r\n              }\r\n            }\r\n            this.basic_name = basic_nutrition_name;\r\n            this.basic_value = basic_nutrition_value;\r\n\r\n            this.lipid_name = lipid_name;\r\n            this.lipid_value = lipid_value;\r\n\r\n            this.mineral_name = mineral_name;\r\n            this.mineral_value = mineral_value;\r\n\r\n            this.vitamin_name = vitamin_name;\r\n            this.vitamin_value = vitamin_value;\r\n\r\n            this.amino_acid_name = amino_acid_name;\r\n            this.amino_acid_value = amino_acid_value;\r\n\r\n            resolve({ basic_nutrition_name, basic_nutrition_value });\r\n          })\r\n          .catch(error => reject(error));\r\n      });\r\n    },\r\n    get_scale(food_id) {\r\n      return new Promise((resolve, reject) => {\r\n        this.axios\r\n          .get(serverUrl + \"/api/food/main_nutrition\", {\r\n            params: { food_id: food_id }\r\n          })\r\n          .then(res => {\r\n            let arr = res.data.data[0];\r\n            var scale_value_name = [];\r\n            var style_scale = [];\r\n            for (let i in arr[2]) {\r\n              scale_value_name.push({\r\n                name: i,\r\n                value: arr[2][i]\r\n              });\r\n            }\r\n            for (let i2 in arr[3]) {\r\n              style_scale.push({\r\n                name: i2,\r\n                value: arr[3][i2]\r\n              });\r\n            }\r\n            this.scale_value_name = scale_value_name;\r\n            this.style_scale = style_scale;\r\n            //绘制主要营养图表\r\n            let pieChart1 = echarts.init(document.getElementById(\"myChart6\"));\r\n            let pieChart2 = echarts.init(document.getElementById(\"myChart7\"));\r\n\r\n            pieChart1.setOption({\r\n              title: {\r\n                text: \"各种营养成分含量分布\",\r\n                left: \"center\"\r\n              },\r\n              tooltip: {\r\n                trigger: \"item\",\r\n                formatter: \"各种营养成分含量分布 <br/>{b} : {c} ({d}%)\"\r\n              },\r\n              series: [\r\n                {\r\n                  type: \"pie\",\r\n                  radius: \"55%\",\r\n                  center: [\"50%\", \"60%\"],\r\n                  data: this.scale_value_name,\r\n                  emphasis: {\r\n                    itemStyle: {\r\n                      shadowBlur: 10,\r\n                      shadowOffsetX: 0,\r\n                      shadowColor: \"rgba(0, 0, 0, 0.5)\"\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            });\r\n\r\n            pieChart2.setOption({\r\n              title: {\r\n                text: \"各类营养成分含量分布\",\r\n                left: \"center\"\r\n              },\r\n              tooltip: {\r\n                trigger: \"item\",\r\n                formatter: \"各类营养成分含量分布 <br/>{b} : {c} ({d}%)\"\r\n              },\r\n              series: [\r\n                {\r\n                  type: \"pie\",\r\n                  radius: \"55%\",\r\n                  center: [\"50%\", \"60%\"],\r\n                  data: this.style_scale,\r\n                  emphasis: {\r\n                    itemStyle: {\r\n                      shadowBlur: 10,\r\n                      shadowOffsetX: 0,\r\n                      shadowColor: \"rgba(0, 0, 0, 0.5)\"\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            });\r\n\r\n            resolve();\r\n          })\r\n          .catch(error => reject(error));\r\n      });\r\n    },\r\n    drawLine() {\r\n      // console.log(this.get_food_data())\r\n      //初始化 ECharts 实例\r\n      let myChart2 = echarts.init(document.getElementById(\"myChart2\"));\r\n      let myChart3 = echarts.init(document.getElementById(\"myChart3\"));\r\n      let myChart4 = echarts.init(document.getElementById(\"myChart4\"));\r\n      let myChart5 = echarts.init(document.getElementById(\"myChart5\"));\r\n\r\n      myChart2.setOption({\r\n        title: {\r\n          text: \"脂类（毫克）\"\r\n        },\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: this.lipid_name\r\n        },\r\n        yAxis: {},\r\n        series: [\r\n          {\r\n            name: \"脂类\",\r\n            type: \"bar\",\r\n            data: this.lipid_value,\r\n            itemStyle: {\r\n              normal: {\r\n                label: {\r\n                  show: true, //开启显示\r\n                  position: \"top\", //在上方显示\r\n                  textStyle: {\r\n                    //数值样式\r\n                    color: \"black\",\r\n                    fontSize: 16\r\n                  }\r\n                },\r\n                color: function(params) {\r\n                  var colorList = [\r\n                    \"#c23531\",\r\n                    \"#2f4554\",\r\n                    \"#61a0a8\",\r\n                    \"#d48265\",\r\n                    \"#91c7ae\",\r\n                    \"#749f83\",\r\n                    \"#ca8622\"\r\n                  ];\r\n                  var index;\r\n                  if (params.dataIndex >= colorList.length) {\r\n                    index = params.dataIndex - colorList.length;\r\n                    return colorList[index];\r\n                  }\r\n                  return colorList[params.dataIndex];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      });\r\n\r\n      myChart3.setOption({\r\n        title: {\r\n          text: \"矿物质（毫克）\"\r\n        },\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: this.mineral_name\r\n        },\r\n        yAxis: {},\r\n        series: [\r\n          {\r\n            name: \"矿物质\",\r\n            type: \"bar\",\r\n            data: this.mineral_value,\r\n            itemStyle: {\r\n              normal: {\r\n                label: {\r\n                  show: true, //开启显示\r\n                  position: \"top\", //在上方显示\r\n                  textStyle: {\r\n                    //数值样式\r\n                    color: \"black\",\r\n                    fontSize: 16\r\n                  }\r\n                },\r\n                color: function(params) {\r\n                  var colorList = [\r\n                    \"#c23531\",\r\n                    \"#2f4554\",\r\n                    \"#61a0a8\",\r\n                    \"#d48265\",\r\n                    \"#91c7ae\",\r\n                    \"#749f83\",\r\n                    \"#ca8622\"\r\n                  ];\r\n                  var index;\r\n                  if (params.dataIndex >= colorList.length) {\r\n                    index = params.dataIndex - colorList.length;\r\n                    return colorList[index];\r\n                  }\r\n                  return colorList[params.dataIndex];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      });\r\n\r\n      myChart4.setOption({\r\n        title: {\r\n          text: \"维生素（毫克）\"\r\n        },\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: this.vitamin_name,\r\n          axisLabel: {\r\n            rotate: -22 //角度倾斜\r\n          }\r\n        },\r\n        yAxis: {},\r\n        series: [\r\n          {\r\n            name: \"维生素\",\r\n            type: \"bar\",\r\n            data: this.vitamin_value,\r\n            itemStyle: {\r\n              normal: {\r\n                label: {\r\n                  show: true, //开启显示\r\n                  position: \"top\", //在上方显示\r\n                  textStyle: {\r\n                    //数值样式\r\n                    color: \"black\",\r\n                    fontSize: 16\r\n                  }\r\n                },\r\n                color: function(params) {\r\n                  var colorList = [\r\n                    \"#c23531\",\r\n                    \"#2f4554\",\r\n                    \"#61a0a8\",\r\n                    \"#d48265\",\r\n                    \"#91c7ae\",\r\n                    \"#749f83\",\r\n                    \"#ca8622\"\r\n                  ];\r\n                  var index;\r\n                  if (params.dataIndex >= colorList.length) {\r\n                    index = params.dataIndex - colorList.length;\r\n                    return colorList[index];\r\n                  }\r\n                  return colorList[params.dataIndex];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      });\r\n\r\n      myChart5.setOption({\r\n        title: {\r\n          text: \"氨基酸（毫克）\"\r\n        },\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: this.amino_acid_name\r\n        },\r\n        yAxis: {},\r\n        series: [\r\n          {\r\n            name: \"氨基酸\",\r\n            type: \"bar\",\r\n            data: this.amino_acid_value,\r\n            itemStyle: {\r\n              normal: {\r\n                label: {\r\n                  show: true, //开启显示\r\n                  position: \"top\", //在上方显示\r\n                  textStyle: {\r\n                    //数值样式\r\n                    color: \"black\",\r\n                    fontSize: 16\r\n                  }\r\n                },\r\n                color: function(params) {\r\n                  var colorList = [\r\n                    \"#c23531\",\r\n                    \"#2f4554\",\r\n                    \"#61a0a8\",\r\n                    \"#d48265\",\r\n                    \"#91c7ae\",\r\n                    \"#749f83\",\r\n                    \"#ca8622\"\r\n                  ];\r\n                  var index;\r\n                  if (params.dataIndex >= colorList.length) {\r\n                    index = params.dataIndex - colorList.length;\r\n                    return colorList[index];\r\n                  }\r\n                  return colorList[params.dataIndex];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.content {\r\n  background: #00DDAA;\r\n  margin-top: 20px;\r\n  line-height: 50px;\r\n}\r\n\r\n.s2-2 {\r\n  display: flex;\r\n  margin-top: 20px;\r\n}\r\n\r\n.s2-3 {\r\n  display: inline-block;\r\n  margin-top: 0px;\r\n  margin-bottom: 220px;\r\n  height: 10px;\r\n  line-height: 30px;\r\n  width: 1100px;\r\n}\r\n\r\n.s2-2 .style {\r\n  display: inline-block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color: #ffffff;\r\n  margin-bottom: 20px;\r\n  line-height: 45px;\r\n}\r\n\r\n.line {\r\n  display: flex;\r\n  width: 1100px;\r\n}\r\n\r\n.line .left,\r\n.line .right {\r\n  border: 1px solid #ccc;\r\n  border-left: 0px;\r\n  border-right: 0px;\r\n  flex: 1;\r\n  line-height: 45px;\r\n  text-align: center;\r\n}\r\n</style>"],"sourceRoot":"src/views"}]}