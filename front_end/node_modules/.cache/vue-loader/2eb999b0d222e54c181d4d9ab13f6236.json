{"remainingRequest":"C:\\Users\\HP\\Desktop\\food\\Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\food\\Vue\\src\\views\\search_food_result.vue?vue&type=style&index=0&id=a9ea0328&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\food\\Vue\\src\\views\\search_food_result.vue","mtime":1589115057246},{"path":"C:\\Users\\HP\\Desktop\\food\\Vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Desktop\\food\\Vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Desktop\\food\\Vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Desktop\\food\\Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Desktop\\food\\Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouY29udGVudCB7DQogIGJhY2tncm91bmQ6ICMwMDk5NjY7DQogIG1hcmdpbi10b3A6IDIwcHg7DQogIGxpbmUtaGVpZ2h0OiA1MHB4Ow0KfQ0KDQouczItMiB7DQogIGRpc3BsYXk6IGZsZXg7DQogIG1hcmdpbi10b3A6IDIwcHg7DQp9DQoNCi5zMi0zIHsNCiAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICBtYXJnaW4tdG9wOiAwcHg7DQogIG1hcmdpbi1ib3R0b206IDIyMHB4Ow0KICBoZWlnaHQ6IDEwcHg7DQogIGxpbmUtaGVpZ2h0OiAzMHB4Ow0KICB3aWR0aDogMTEwMHB4Ow0KfQ0KDQouczItMiAuc3R5bGUgew0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIG1hcmdpbi1sZWZ0OiBhdXRvOw0KICBtYXJnaW4tcmlnaHQ6IGF1dG87DQogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7DQogIG1hcmdpbi1ib3R0b206IDIwcHg7DQogIGxpbmUtaGVpZ2h0OiA0NXB4Ow0KfQ0KDQoubGluZSB7DQogIGRpc3BsYXk6IGZsZXg7DQogIHdpZHRoOiAxMTAwcHg7DQp9DQoNCi5saW5lIC5sZWZ0LA0KLmxpbmUgLnJpZ2h0IHsNCiAgYm9yZGVyOiAxcHggc29saWQgI2NjYzsNCiAgYm9yZGVyLWxlZnQ6IDBweDsNCiAgYm9yZGVyLXJpZ2h0OiAwcHg7DQogIGZsZXg6IDE7DQogIGxpbmUtaGVpZ2h0OiA0NXB4Ow0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQp9DQo="},{"version":3,"sources":["search_food_result.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6qBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"search_food_result.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <div class=\"s2-3\" style=\"font-size: 20px;text-align: left;color: #ffffff;\">\r\n      数据说明：\r\n      <br />1. 本网站食物营养成分含量为每 100 克食物所含的含量；\r\n      <br />2. 食物营养成分数据来源于美国农业部数据库及中国农业农村部数据库；\r\n      <br />3. 若没有您需要的食物营养数据或本网站数据有误，请发邮件至 wuyutai@aliyun.com 联系。\r\n    </div>\r\n    <div class=\"s2-1\" style=\"font-size: 35px;text-align: center;color: #ffffff;\">三种主要营养成分</div>\r\n    <div class=\"s2-2\">\r\n      <div class=\"style\">\r\n        <div id=\"myChart0\" style=\"width: 1100px;height:450px;\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"s2-1\" style=\"font-size: 35px;text-align: center;color: #ffffff;\">基本营养</div>\r\n    <div class=\"s2-2\">\r\n      <div class=\"style\">\r\n        <div id=\"myChart1\" style=\"width: 1100px;height:450px;\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"s2-1\" style=\"font-size: 35px;text-align: center;color: #ffffff;\">脂类</div>\r\n    <div class=\"s2-2\">\r\n      <div class=\"style\">\r\n        <div id=\"myChart2\" style=\"width: 1100px;height:450px;\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"s2-1\" style=\"font-size: 35px;text-align: center;color: #ffffff;\">矿物质</div>\r\n    <div class=\"s2-2\">\r\n      <div class=\"style\">\r\n        <div id=\"myChart3\" style=\"width: 1100px;height:450px;\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"s2-1\" style=\"font-size: 35px;text-align: center;color: #ffffff;\">维生素</div>\r\n    <div class=\"s2-2\">\r\n      <div class=\"style\">\r\n        <div id=\"myChart4\" style=\"width: 1100px;height:450px;\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"s2-1\" style=\"font-size: 35px;text-align: center;color: #ffffff;\">氨基酸</div>\r\n    <div class=\"s2-2\">\r\n      <div class=\"style\">\r\n        <div id=\"myChart5\" style=\"width: 1100px;height:450px;\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"s2-1\" style=\"font-size: 35px;text-align: center;color: #ffffff;\">各种营养成分含量分布</div>\r\n    <div class=\"s2-2\">\r\n      <div class=\"style\">\r\n        <div id=\"myChart6\" style=\"width: 1100px;height:450px;\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"s2-1\" style=\"font-size: 35px;text-align: center;color: #ffffff;\">各类营养成分含量分布</div>\r\n    <div class=\"s2-2\">\r\n      <div class=\"style\">\r\n        <div id=\"myChart7\" style=\"width: 1100px;height:450px;\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"s2-1\" style=\"font-size: 35px;text-align: center;color: #ffffff;\">营养成分列表</div>\r\n    <div class=\"s2-2\">\r\n      <div class=\"style\">\r\n        <div\r\n          class=\"style-title\"\r\n          style=\"background-color: #999999;color: #ffffff;font-size: 18px\"\r\n        >基本营养</div>\r\n        <div>\r\n          <div\r\n            v-for=\"(basic_natrition_name,index) in basic_name\"\r\n            :key=\"basic_natrition_name\"\r\n            class=\"line\"\r\n          >\r\n            <div class=\"left\">{{basic_natrition_name}}</div>\r\n            <div class=\"right\">{{basic_value[index]}}毫克</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"style-title\" style=\"background-color: #FF9901;color: #ffffff;font-size: 18px\">脂类</div>\r\n        <div>\r\n          <div v-for=\"(lipid,index) in lipid_name\" :key=\"lipid\" class=\"line\">\r\n            <div class=\"left\">{{lipid}}</div>\r\n            <div class=\"right\">{{lipid_value[index]}}毫克</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"style-title\"\r\n          style=\"background-color: #333333;color: #ffffff;font-size: 18px\"\r\n        >矿物质</div>\r\n        <div>\r\n          <div v-for=\"(mineral,index) in mineral_name\" :key=\"mineral\" class=\"line\">\r\n            <div class=\"left\">{{mineral}}</div>\r\n            <div class=\"right\">{{mineral_value[index]}}毫克</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"style-title\"\r\n          style=\"background-color: #01CC01;color: #ffffff;font-size: 18px\"\r\n        >维生素</div>\r\n        <div>\r\n          <div v-for=\"(vitamin,index) in vitamin_name\" :key=\"vitamin\" class=\"line\">\r\n            <div class=\"left\">{{vitamin}}</div>\r\n            <div class=\"right\">{{vitamin_value[index]}}毫克</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"style-title\"\r\n          style=\"background-color: #FF3366;color: #ffffff;font-size: 18px\"\r\n        >氨基酸</div>\r\n        <div>\r\n          <div v-for=\"(amino_acid,index) in amino_acid_name\" :key=\"amino_acid\" class=\"line\">\r\n            <div class=\"left\">{{amino_acid}}</div>\r\n            <div class=\"right\">{{amino_acid_value[index]}}毫克</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { serverUrl } from \"../config.ts\";\r\n// -----------------------------------------------引入 ECharts 主模块\r\nvar echarts = require(\"echarts/lib/echarts\");\r\n// 引入柱状图\r\nrequire(\"echarts/lib/chart/bar\");\r\n// 引入饼图\r\nrequire(\"echarts/lib/chart/pie\");\r\n// 引入提示框和标题组件\r\nrequire(\"echarts/lib/component/tooltip\");\r\nrequire(\"echarts/lib/component/title\");\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      food_id: this.food_id,\r\n      basic_name: [],\r\n      basic_value: [],\r\n\r\n      lipid_name: [],\r\n      lipid_value: [],\r\n\r\n      mineral_name: [],\r\n      mineral_value: [],\r\n\r\n      vitamin_name: [],\r\n      vitamin_value: [],\r\n\r\n      amino_acid_name: [],\r\n      amino_acid_value: []\r\n    };\r\n  },\r\n\r\n  created() {\r\n    this.food_id = this.$route.query.food_id;\r\n  },\r\n  async mounted() {\r\n    await this.get_food_data(this.$route.query.food_id);\r\n    await this.get_top_data(this.$route.query.food_id);\r\n    await this.get_base_data(this.$route.query.food_id);\r\n    await this.get_scale(this.$route.query.food_id);\r\n    this.drawLine();\r\n  },\r\n  methods: {\r\n    get_top_data(food_id) {\r\n      return new Promise((resolve, reject) => {\r\n        this.axios\r\n          .get(serverUrl + \"/api/food/main_nutrition\", {\r\n            params: { food_id: food_id }\r\n          })\r\n          .then(res => {\r\n            let arr = res.data.data[0];\r\n            var top_name = [];\r\n            var top_value = [];\r\n            for (let i1 in arr[0]) {\r\n              top_name.push(i1);\r\n              top_value.push(arr[0][i1]);\r\n            }\r\n            this.top_name = top_name;\r\n            this.top_value = top_value;\r\n            // 绘制主要营养图表\r\n            let topChart = echarts.init(document.getElementById(\"myChart0\"));\r\n            topChart.setOption({\r\n              title: {\r\n                text: \"主要营养（毫克）\"\r\n              },\r\n              tooltip: {},\r\n              xAxis: {},\r\n              yAxis: {\r\n                data: this.top_name\r\n              },\r\n              series: [\r\n                {\r\n                  name: \"主要营养\",\r\n                  type: \"bar\",\r\n                  data: this.top_value,\r\n                  itemStyle: {\r\n                    normal: {\r\n                      label: {\r\n                        show: true, //开启显示\r\n                        position: \"top\", //在上方显示\r\n                        textStyle: {\r\n                          //数值样式\r\n                          color: \"black\",\r\n                          fontSize: 16\r\n                        }\r\n                      },\r\n                      color: function(params) {\r\n                        //注意，如果颜色太少的话，后面颜色不会自动循环，最好多定义几个颜色\r\n                        var colorList = [\r\n                          \"#99ff33\",\r\n                          \"#2f4554\",\r\n                          \"#61a0a8\",\r\n                          \"#d48265\",\r\n                          \"#91c7ae\",\r\n                          \"#749f83\",\r\n                          \"#ca8622\"\r\n                        ];\r\n                        var index;\r\n                        //给大于颜色数量的柱体添加循环颜色的判断\r\n                        if (params.dataIndex >= colorList.length) {\r\n                          index = params.dataIndex - colorList.length;\r\n                          return colorList[index];\r\n                        }\r\n                        return colorList[params.dataIndex];\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            });\r\n\r\n            resolve();\r\n          })\r\n          .catch(error => reject(error));\r\n      });\r\n    },\r\n    get_base_data(food_id) {\r\n      return new Promise((resolve, reject) => {\r\n        this.axios\r\n          .get(serverUrl + \"/api/food/food_detailed\", {\r\n            params: { food_id: food_id }\r\n          })\r\n          .then(res => {\r\n            let arr = res.data.data[0];\r\n            var basic_nutrition_name = [];\r\n            var basic_nutrition_value = [];\r\n            for (let item of arr) {\r\n              for (let i1 in item[\"style_first\"]) {\r\n                basic_nutrition_name.push(i1);\r\n                basic_nutrition_value.push(item[\"style_first\"][i1]);\r\n              }\r\n            }\r\n            this.basic_name1 = basic_nutrition_name;\r\n            this.basic_value1 = basic_nutrition_value;\r\n            // 绘制基本营养图表\r\n            let topChart = echarts.init(document.getElementById(\"myChart1\"));\r\n            topChart.setOption({\r\n              title: {\r\n                text: \"基本营养（毫克）\"\r\n              },\r\n              tooltip: {},\r\n              xAxis: {\r\n                data: this.basic_name1\r\n              },\r\n              yAxis: {},\r\n              series: [\r\n                {\r\n                  name: \"基本营养\",\r\n                  type: \"bar\",\r\n                  data: this.basic_value1,\r\n                  itemStyle: {\r\n                    normal: {\r\n                      label: {\r\n                        show: true, //开启显示\r\n                        position: \"top\", //在上方显示\r\n                        textStyle: {\r\n                          //数值样式\r\n                          color: \"black\",\r\n                          fontSize: 16\r\n                        }\r\n                      },\r\n                      color: function(params) {\r\n                        //注意，如果颜色太少的话，后面颜色不会自动循环，最好多定义几个颜色\r\n                        var colorList = [\r\n                          \"#99ff33\",\r\n                          \"#2f4554\",\r\n                          \"#61a0a8\",\r\n                          \"#d48265\",\r\n                          \"#91c7ae\",\r\n                          \"#749f83\",\r\n                          \"#ca8622\"\r\n                        ];\r\n                        var index;\r\n                        //给大于颜色数量的柱体添加循环颜色的判断\r\n                        if (params.dataIndex >= colorList.length) {\r\n                          index = params.dataIndex - colorList.length;\r\n                          return colorList[index];\r\n                        }\r\n                        return colorList[params.dataIndex];\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            });\r\n\r\n            resolve();\r\n          })\r\n          .catch(error => reject(error));\r\n      });\r\n    },\r\n    get_food_data(food_id) {\r\n      return new Promise((resolve, reject) => {\r\n        this.axios\r\n          .get(serverUrl + \"/api/food/food_detailed\", {\r\n            params: { food_id: food_id }\r\n          })\r\n          .then(res => {\r\n            let arr = res.data.data[0];\r\n            var basic_nutrition_name = [];\r\n            var basic_nutrition_value = [];\r\n\r\n            var lipid_name = [];\r\n            var lipid_value = [];\r\n\r\n            var mineral_name = [];\r\n            var mineral_value = [];\r\n\r\n            var vitamin_name = [];\r\n            var vitamin_value = [];\r\n\r\n            var amino_acid_name = [];\r\n            var amino_acid_value = [];\r\n            for (let item of arr) {\r\n              for (let i1 in item[\"style_first\"]) {\r\n                basic_nutrition_name.push(i1);\r\n                basic_nutrition_value.push(item[\"style_first\"][i1]);\r\n              }\r\n              for (let i2 in item[\"style_second\"]) {\r\n                lipid_name.push(i2);\r\n                lipid_value.push(item[\"style_second\"][i2]);\r\n              }\r\n              for (let i3 in item[\"style_third\"]) {\r\n                mineral_name.push(i3);\r\n                mineral_value.push(item[\"style_third\"][i3]);\r\n              }\r\n              for (let i4 in item[\"style_fourth\"]) {\r\n                vitamin_name.push(i4);\r\n                vitamin_value.push(item[\"style_fourth\"][i4]);\r\n              }\r\n              for (let i5 in item[\"style_fifth\"]) {\r\n                amino_acid_name.push(i5);\r\n                amino_acid_value.push(item[\"style_fifth\"][i5]);\r\n              }\r\n            }\r\n            this.basic_name = basic_nutrition_name;\r\n            this.basic_value = basic_nutrition_value;\r\n\r\n            this.lipid_name = lipid_name;\r\n            this.lipid_value = lipid_value;\r\n\r\n            this.mineral_name = mineral_name;\r\n            this.mineral_value = mineral_value;\r\n\r\n            this.vitamin_name = vitamin_name;\r\n            this.vitamin_value = vitamin_value;\r\n\r\n            this.amino_acid_name = amino_acid_name;\r\n            this.amino_acid_value = amino_acid_value;\r\n\r\n            resolve({ basic_nutrition_name, basic_nutrition_value });\r\n          })\r\n          .catch(error => reject(error));\r\n      });\r\n    },\r\n    get_scale(food_id) {\r\n      return new Promise((resolve, reject) => {\r\n        this.axios\r\n          .get(serverUrl + \"/api/food/main_nutrition\", {\r\n            params: { food_id: food_id }\r\n          })\r\n          .then(res => {\r\n            let arr = res.data.data[0];\r\n            var scale_value_name = [];\r\n            var style_scale = [];\r\n            for (let i in arr[2]) {\r\n              scale_value_name.push({\r\n                name: i,\r\n                value: arr[2][i]\r\n              });\r\n            }\r\n            for (let i2 in arr[3]) {\r\n              style_scale.push({\r\n                name: i2,\r\n                value: arr[3][i2]\r\n              });\r\n            }\r\n            this.scale_value_name = scale_value_name;\r\n            this.style_scale = style_scale;\r\n            // 绘制主要营养图表\r\n            let pieChart1 = echarts.init(document.getElementById(\"myChart6\"));\r\n            let pieChart2 = echarts.init(document.getElementById(\"myChart7\"));\r\n\r\n            pieChart1.setOption({\r\n              title: {\r\n                text: \"各种营养成分含量分布\",\r\n                left: \"center\"\r\n              },\r\n              tooltip: {\r\n                trigger: \"item\",\r\n                formatter: \"各种营养成分含量分布 <br/>{b} : {c} ({d}%)\"\r\n              },\r\n              series: [\r\n                {\r\n                  type: \"pie\",\r\n                  radius: \"55%\",\r\n                  center: [\"50%\", \"60%\"],\r\n                  data: this.scale_value_name,\r\n                  emphasis: {\r\n                    itemStyle: {\r\n                      shadowBlur: 10,\r\n                      shadowOffsetX: 0,\r\n                      shadowColor: \"rgba(0, 0, 0, 0.5)\"\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            });\r\n\r\n            pieChart2.setOption({\r\n              title: {\r\n                text: \"各类营养成分含量分布\",\r\n                left: \"center\"\r\n              },\r\n              tooltip: {\r\n                trigger: \"item\",\r\n                formatter: \"各类营养成分含量分布 <br/>{b} : {c} ({d}%)\"\r\n              },\r\n              series: [\r\n                {\r\n                  type: \"pie\",\r\n                  radius: \"55%\",\r\n                  center: [\"50%\", \"60%\"],\r\n                  data: this.style_scale,\r\n                  emphasis: {\r\n                    itemStyle: {\r\n                      shadowBlur: 10,\r\n                      shadowOffsetX: 0,\r\n                      shadowColor: \"rgba(0, 0, 0, 0.5)\"\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            });\r\n\r\n            resolve();\r\n          })\r\n          .catch(error => reject(error));\r\n      });\r\n    },\r\n    drawLine() {\r\n      // console.log(this.get_food_data())\r\n      // 基于准备好的dom，初始化echarts实例\r\n      let myChart2 = echarts.init(document.getElementById(\"myChart2\"));\r\n      let myChart3 = echarts.init(document.getElementById(\"myChart3\"));\r\n      let myChart4 = echarts.init(document.getElementById(\"myChart4\"));\r\n      let myChart5 = echarts.init(document.getElementById(\"myChart5\"));\r\n      // 绘制图表\r\n\r\n      myChart2.setOption({\r\n        title: {\r\n          text: \"脂类（毫克）\"\r\n        },\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: this.lipid_name\r\n        },\r\n        yAxis: {},\r\n        series: [\r\n          {\r\n            name: \"脂类\",\r\n            type: \"bar\",\r\n            data: this.lipid_value,\r\n            itemStyle: {\r\n              normal: {\r\n                label: {\r\n                  show: true, //开启显示\r\n                  position: \"top\", //在上方显示\r\n                  textStyle: {\r\n                    //数值样式\r\n                    color: \"black\",\r\n                    fontSize: 16\r\n                  }\r\n                },\r\n                color: function(params) {\r\n                  //注意，如果颜色太少的话，后面颜色不会自动循环，最好多定义几个颜色\r\n                  var colorList = [\r\n                    \"#c23531\",\r\n                    \"#2f4554\",\r\n                    \"#61a0a8\",\r\n                    \"#d48265\",\r\n                    \"#91c7ae\",\r\n                    \"#749f83\",\r\n                    \"#ca8622\"\r\n                  ];\r\n                  var index;\r\n                  //给大于颜色数量的柱体添加循环颜色的判断\r\n                  if (params.dataIndex >= colorList.length) {\r\n                    index = params.dataIndex - colorList.length;\r\n                    return colorList[index];\r\n                  }\r\n                  return colorList[params.dataIndex];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      });\r\n\r\n      myChart3.setOption({\r\n        title: {\r\n          text: \"矿物质（毫克）\"\r\n        },\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: this.mineral_name\r\n        },\r\n        yAxis: {},\r\n        series: [\r\n          {\r\n            name: \"矿物质\",\r\n            type: \"bar\",\r\n            data: this.mineral_value,\r\n            itemStyle: {\r\n              normal: {\r\n                label: {\r\n                  show: true, //开启显示\r\n                  position: \"top\", //在上方显示\r\n                  textStyle: {\r\n                    //数值样式\r\n                    color: \"black\",\r\n                    fontSize: 16\r\n                  }\r\n                },\r\n                color: function(params) {\r\n                  //注意，如果颜色太少的话，后面颜色不会自动循环，最好多定义几个颜色\r\n                  var colorList = [\r\n                    \"#c23531\",\r\n                    \"#2f4554\",\r\n                    \"#61a0a8\",\r\n                    \"#d48265\",\r\n                    \"#91c7ae\",\r\n                    \"#749f83\",\r\n                    \"#ca8622\"\r\n                  ];\r\n                  var index;\r\n                  //给大于颜色数量的柱体添加循环颜色的判断\r\n                  if (params.dataIndex >= colorList.length) {\r\n                    index = params.dataIndex - colorList.length;\r\n                    return colorList[index];\r\n                  }\r\n                  return colorList[params.dataIndex];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      });\r\n\r\n      myChart4.setOption({\r\n        title: {\r\n          text: \"维生素（毫克）\"\r\n        },\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: this.vitamin_name,\r\n          axisLabel: {\r\n            rotate: -22 //倾斜\r\n          }\r\n        },\r\n        yAxis: {},\r\n        series: [\r\n          {\r\n            name: \"维生素\",\r\n            type: \"bar\",\r\n            data: this.vitamin_value,\r\n            itemStyle: {\r\n              normal: {\r\n                label: {\r\n                  show: true, //开启显示\r\n                  position: \"top\", //在上方显示\r\n                  textStyle: {\r\n                    //数值样式\r\n                    color: \"black\",\r\n                    fontSize: 16\r\n                  }\r\n                },\r\n                color: function(params) {\r\n                  //注意，如果颜色太少的话，后面颜色不会自动循环，最好多定义几个颜色\r\n                  var colorList = [\r\n                    \"#c23531\",\r\n                    \"#2f4554\",\r\n                    \"#61a0a8\",\r\n                    \"#d48265\",\r\n                    \"#91c7ae\",\r\n                    \"#749f83\",\r\n                    \"#ca8622\"\r\n                  ];\r\n                  var index;\r\n                  //给大于颜色数量的柱体添加循环颜色的判断\r\n                  if (params.dataIndex >= colorList.length) {\r\n                    index = params.dataIndex - colorList.length;\r\n                    return colorList[index];\r\n                  }\r\n                  return colorList[params.dataIndex];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      });\r\n\r\n      myChart5.setOption({\r\n        title: {\r\n          text: \"氨基酸（毫克）\"\r\n        },\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: this.amino_acid_name\r\n        },\r\n        yAxis: {},\r\n        series: [\r\n          {\r\n            name: \"氨基酸\",\r\n            type: \"bar\",\r\n            data: this.amino_acid_value,\r\n            itemStyle: {\r\n              normal: {\r\n                label: {\r\n                  show: true, //开启显示\r\n                  position: \"top\", //在上方显示\r\n                  textStyle: {\r\n                    //数值样式\r\n                    color: \"black\",\r\n                    fontSize: 16\r\n                  }\r\n                },\r\n                color: function(params) {\r\n                  //注意，如果颜色太少的话，后面颜色不会自动循环，最好多定义几个颜色\r\n                  var colorList = [\r\n                    \"#c23531\",\r\n                    \"#2f4554\",\r\n                    \"#61a0a8\",\r\n                    \"#d48265\",\r\n                    \"#91c7ae\",\r\n                    \"#749f83\",\r\n                    \"#ca8622\"\r\n                  ];\r\n                  var index;\r\n                  //给大于颜色数量的柱体添加循环颜色的判断\r\n                  if (params.dataIndex >= colorList.length) {\r\n                    index = params.dataIndex - colorList.length;\r\n                    return colorList[index];\r\n                  }\r\n                  return colorList[params.dataIndex];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.content {\r\n  background: #009966;\r\n  margin-top: 20px;\r\n  line-height: 50px;\r\n}\r\n\r\n.s2-2 {\r\n  display: flex;\r\n  margin-top: 20px;\r\n}\r\n\r\n.s2-3 {\r\n  display: inline-block;\r\n  margin-top: 0px;\r\n  margin-bottom: 220px;\r\n  height: 10px;\r\n  line-height: 30px;\r\n  width: 1100px;\r\n}\r\n\r\n.s2-2 .style {\r\n  display: inline-block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color: #ffffff;\r\n  margin-bottom: 20px;\r\n  line-height: 45px;\r\n}\r\n\r\n.line {\r\n  display: flex;\r\n  width: 1100px;\r\n}\r\n\r\n.line .left,\r\n.line .right {\r\n  border: 1px solid #ccc;\r\n  border-left: 0px;\r\n  border-right: 0px;\r\n  flex: 1;\r\n  line-height: 45px;\r\n  text-align: center;\r\n}\r\n</style>"]}]}